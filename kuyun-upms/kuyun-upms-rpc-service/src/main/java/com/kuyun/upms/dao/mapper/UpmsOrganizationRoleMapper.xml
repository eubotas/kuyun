<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kuyun.upms.dao.mapper.UpmsOrganizationRoleMapper">
  <resultMap id="BaseResultMap" type="com.kuyun.upms.dao.model.UpmsOrganizationRole">
    <id column="organization_role_id" jdbcType="INTEGER" property="organizationRoleId" />
    <result column="organization_id" jdbcType="INTEGER" property="organizationId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="delete_flag" jdbcType="BIT" property="deleteFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    organization_role_id, organization_id, role_id, delete_flag
  </sql>
  <select id="selectByExample" parameterType="com.kuyun.upms.dao.model.UpmsOrganizationRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from upms_organization_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from upms_organization_role
    where organization_role_id = #{organizationRoleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    update upms_organization_role set delete_flag = 1 
    where organization_role_id = #{organizationRoleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kuyun.upms.dao.model.UpmsOrganizationRoleExample">
    update upms_organization_role set delete_flag = 1 
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kuyun.upms.dao.model.UpmsOrganizationRole">
    insert into upms_organization_role (organization_role_id, organization_id, 
      role_id, delete_flag)
    values (#{organizationRoleId,jdbcType=INTEGER}, #{organizationId,jdbcType=INTEGER}, 
      #{roleId,jdbcType=INTEGER}, #{deleteFlag,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.kuyun.upms.dao.model.UpmsOrganizationRole">
    insert into upms_organization_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="organizationRoleId != null">
        organization_role_id,
      </if>
      <if test="organizationId != null">
        organization_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="organizationRoleId != null">
        #{organizationRoleId,jdbcType=INTEGER},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kuyun.upms.dao.model.UpmsOrganizationRoleExample" resultType="java.lang.Long">
    select count(*) from upms_organization_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update upms_organization_role
    <set>
      <if test="record.organizationRoleId != null">
        organization_role_id = #{record.organizationRoleId,jdbcType=INTEGER},
      </if>
      <if test="record.organizationId != null">
        organization_id = #{record.organizationId,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.deleteFlag != null">
        delete_flag = #{record.deleteFlag,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update upms_organization_role
    set organization_role_id = #{record.organizationRoleId,jdbcType=INTEGER},
      organization_id = #{record.organizationId,jdbcType=INTEGER},
      role_id = #{record.roleId,jdbcType=INTEGER},
      delete_flag = #{record.deleteFlag,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kuyun.upms.dao.model.UpmsOrganizationRole">
    update upms_organization_role
    <set>
      <if test="organizationId != null">
        organization_id = #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=BIT},
      </if>
    </set>
    where organization_role_id = #{organizationRoleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kuyun.upms.dao.model.UpmsOrganizationRole">
    update upms_organization_role
    set organization_id = #{organizationId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=INTEGER},
      delete_flag = #{deleteFlag,jdbcType=BIT}
    where organization_role_id = #{organizationRoleId,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into upms_organization_role  (organization_role_id, organization_id, 
        role_id, delete_flag)
      values
      <foreach collection="items" item="item" index="index" separator=",">
      (#{item.organizationRoleId,jdbcType=INTEGER}, #{item.organizationId,jdbcType=INTEGER}, 
        #{item.roleId,jdbcType=INTEGER}, #{item.deleteFlag,jdbcType=BIT})
      </foreach>
    </if>
  </insert>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>