<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kuyun.eam.dao.mapper.EamEquipmentModelPropertiesMapper">
  <resultMap id="BaseResultMap" type="com.kuyun.eam.dao.model.EamEquipmentModelProperties">
    <id column="equipment_model_property_id" jdbcType="INTEGER" property="equipmentModelPropertyId" />
    <result column="equipment_model_id" jdbcType="INTEGER" property="equipmentModelId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="label" jdbcType="VARCHAR" property="label" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="data_type" jdbcType="VARCHAR" property="dataType" />
    <result column="display_type" jdbcType="VARCHAR" property="displayType" />
    <result column="refresh_period" jdbcType="VARCHAR" property="refreshPeriod" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="delete_flag" jdbcType="BIT" property="deleteFlag" />
    <result column="organization_id" jdbcType="INTEGER" property="organizationId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    equipment_model_property_id, equipment_model_id, name, label, unit, address, data_type, 
    display_type, refresh_period, create_user_id, create_time, update_user_id, update_time, 
    delete_flag, organization_id
  </sql>
  <select id="selectByExample" parameterType="com.kuyun.eam.dao.model.EamEquipmentModelPropertiesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from eam_equipment_model_properties
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from eam_equipment_model_properties
    where equipment_model_property_id = #{equipmentModelPropertyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    update eam_equipment_model_properties set delete_flag = 1 
    where equipment_model_property_id = #{equipmentModelPropertyId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kuyun.eam.dao.model.EamEquipmentModelPropertiesExample">
    update eam_equipment_model_properties set delete_flag = 1 
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kuyun.eam.dao.model.EamEquipmentModelProperties">
    insert into eam_equipment_model_properties (equipment_model_property_id, equipment_model_id, 
      name, label, unit, 
      address, data_type, display_type, 
      refresh_period, create_user_id, create_time, 
      update_user_id, update_time, delete_flag, 
      organization_id)
    values (#{equipmentModelPropertyId,jdbcType=INTEGER}, #{equipmentModelId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{label,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{dataType,jdbcType=VARCHAR}, #{displayType,jdbcType=VARCHAR}, 
      #{refreshPeriod,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{deleteFlag,jdbcType=BIT}, 
      #{organizationId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.kuyun.eam.dao.model.EamEquipmentModelProperties">
    insert into eam_equipment_model_properties
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="equipmentModelPropertyId != null">
        equipment_model_property_id,
      </if>
      <if test="equipmentModelId != null">
        equipment_model_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="label != null">
        label,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="dataType != null">
        data_type,
      </if>
      <if test="displayType != null">
        display_type,
      </if>
      <if test="refreshPeriod != null">
        refresh_period,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
      <if test="organizationId != null">
        organization_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="equipmentModelPropertyId != null">
        #{equipmentModelPropertyId,jdbcType=INTEGER},
      </if>
      <if test="equipmentModelId != null">
        #{equipmentModelId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null">
        #{dataType,jdbcType=VARCHAR},
      </if>
      <if test="displayType != null">
        #{displayType,jdbcType=VARCHAR},
      </if>
      <if test="refreshPeriod != null">
        #{refreshPeriod,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=BIT},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kuyun.eam.dao.model.EamEquipmentModelPropertiesExample" resultType="java.lang.Long">
    select count(*) from eam_equipment_model_properties
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update eam_equipment_model_properties
    <set>
      <if test="record.equipmentModelPropertyId != null">
        equipment_model_property_id = #{record.equipmentModelPropertyId,jdbcType=INTEGER},
      </if>
      <if test="record.equipmentModelId != null">
        equipment_model_id = #{record.equipmentModelId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.label != null">
        label = #{record.label,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.dataType != null">
        data_type = #{record.dataType,jdbcType=VARCHAR},
      </if>
      <if test="record.displayType != null">
        display_type = #{record.displayType,jdbcType=VARCHAR},
      </if>
      <if test="record.refreshPeriod != null">
        refresh_period = #{record.refreshPeriod,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteFlag != null">
        delete_flag = #{record.deleteFlag,jdbcType=BIT},
      </if>
      <if test="record.organizationId != null">
        organization_id = #{record.organizationId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update eam_equipment_model_properties
    set equipment_model_property_id = #{record.equipmentModelPropertyId,jdbcType=INTEGER},
      equipment_model_id = #{record.equipmentModelId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      label = #{record.label,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      data_type = #{record.dataType,jdbcType=VARCHAR},
      display_type = #{record.displayType,jdbcType=VARCHAR},
      refresh_period = #{record.refreshPeriod,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      delete_flag = #{record.deleteFlag,jdbcType=BIT},
      organization_id = #{record.organizationId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kuyun.eam.dao.model.EamEquipmentModelProperties">
    update eam_equipment_model_properties
    <set>
      <if test="equipmentModelId != null">
        equipment_model_id = #{equipmentModelId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null">
        data_type = #{dataType,jdbcType=VARCHAR},
      </if>
      <if test="displayType != null">
        display_type = #{displayType,jdbcType=VARCHAR},
      </if>
      <if test="refreshPeriod != null">
        refresh_period = #{refreshPeriod,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=BIT},
      </if>
      <if test="organizationId != null">
        organization_id = #{organizationId,jdbcType=INTEGER},
      </if>
    </set>
    where equipment_model_property_id = #{equipmentModelPropertyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kuyun.eam.dao.model.EamEquipmentModelProperties">
    update eam_equipment_model_properties
    set equipment_model_id = #{equipmentModelId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      label = #{label,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      data_type = #{dataType,jdbcType=VARCHAR},
      display_type = #{displayType,jdbcType=VARCHAR},
      refresh_period = #{refreshPeriod,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_flag = #{deleteFlag,jdbcType=BIT},
      organization_id = #{organizationId,jdbcType=INTEGER}
    where equipment_model_property_id = #{equipmentModelPropertyId,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert">
    <if test="items.get(0) != null">
            insert into eam_equipment_model_properties  (equipment_model_property_id, equipment_model_id, 
        name, label, unit, 
        address, data_type, display_type, 
        refresh_period, create_user_id, create_time, 
        update_user_id, update_time, delete_flag, 
        organization_id)
      values
      <foreach collection="items" item="item" index="index" separator=",">
      (#{item.equipmentModelPropertyId,jdbcType=INTEGER}, #{item.equipmentModelId,jdbcType=INTEGER}, 
        #{item.name,jdbcType=VARCHAR}, #{item.label,jdbcType=VARCHAR}, #{item.unit,jdbcType=VARCHAR}, 
        #{item.address,jdbcType=VARCHAR}, #{item.dataType,jdbcType=VARCHAR}, #{item.displayType,jdbcType=VARCHAR}, 
        #{item.refreshPeriod,jdbcType=VARCHAR}, #{item.createUserId,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateUserId,jdbcType=INTEGER}, #{item.updateTime,jdbcType=TIMESTAMP}, #{item.deleteFlag,jdbcType=BIT}, 
        #{item.organizationId,jdbcType=INTEGER})
      </foreach>
    </if>
  </insert>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>