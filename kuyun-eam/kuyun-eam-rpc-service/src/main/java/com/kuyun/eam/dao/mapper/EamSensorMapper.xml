<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kuyun.eam.dao.mapper.EamSensorMapper">
  <resultMap id="BaseResultMap" type="com.kuyun.eam.dao.model.EamSensor">
    <id column="sensor_id" jdbcType="INTEGER" property="sensorId" />
    <result column="equipment_id" jdbcType="VARCHAR" property="equipmentId" />
    <result column="equipment_model_property_id" jdbcType="INTEGER" property="equipmentModelPropertyId" />
    <result column="salve_id" jdbcType="INTEGER" property="salveId" />
    <result column="function_code" jdbcType="INTEGER" property="functionCode" />
    <result column="address" jdbcType="INTEGER" property="address" />
    <result column="data_format" jdbcType="VARCHAR" property="dataFormat" />
    <result column="bit_order" jdbcType="VARCHAR" property="bitOrder" />
    <result column="period" jdbcType="INTEGER" property="period" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="write_number" jdbcType="INTEGER" property="writeNumber" />
    <result column="grm_action" jdbcType="VARCHAR" property="grmAction" />
    <result column="grm_variable" jdbcType="VARCHAR" property="grmVariable" />
    <result column="grm_variable_value" jdbcType="VARCHAR" property="grmVariableValue" />
    <result column="grm_variable_order" jdbcType="INTEGER" property="grmVariableOrder" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="delete_flag" jdbcType="BIT" property="deleteFlag" />
    <result column="organization_id" jdbcType="INTEGER" property="organizationId" />
    <result column="osh" jdbcType="DECIMAL" property="osh" />
    <result column="osl" jdbcType="DECIMAL" property="osl" />
    <result column="ish" jdbcType="DECIMAL" property="ish" />
    <result column="isl" jdbcType="DECIMAL" property="isl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sensor_id, equipment_id, equipment_model_property_id, salve_id, function_code, address, 
    data_format, bit_order, period, quantity, write_number, grm_action, grm_variable, 
    grm_variable_value, grm_variable_order, create_user_id, create_time, update_user_id, 
    update_time, delete_flag, organization_id, osh, osl, ish, isl
  </sql>
  <select id="selectByExample" parameterType="com.kuyun.eam.dao.model.EamSensorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from eam_sensor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from eam_sensor
    where sensor_id = #{sensorId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from eam_sensor
    where sensor_id = #{sensorId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kuyun.eam.dao.model.EamSensorExample">
    delete from eam_sensor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kuyun.eam.dao.model.EamSensor">
    insert into eam_sensor (sensor_id, equipment_id, equipment_model_property_id, 
      salve_id, function_code, address, 
      data_format, bit_order, period, 
      quantity, write_number, grm_action, 
      grm_variable, grm_variable_value, grm_variable_order, 
      create_user_id, create_time, update_user_id, 
      update_time, delete_flag, organization_id, 
      osh, osl, ish, isl
      )
    values (#{sensorId,jdbcType=INTEGER}, #{equipmentId,jdbcType=VARCHAR}, #{equipmentModelPropertyId,jdbcType=INTEGER}, 
      #{salveId,jdbcType=INTEGER}, #{functionCode,jdbcType=INTEGER}, #{address,jdbcType=INTEGER}, 
      #{dataFormat,jdbcType=VARCHAR}, #{bitOrder,jdbcType=VARCHAR}, #{period,jdbcType=INTEGER}, 
      #{quantity,jdbcType=INTEGER}, #{writeNumber,jdbcType=INTEGER}, #{grmAction,jdbcType=VARCHAR}, 
      #{grmVariable,jdbcType=VARCHAR}, #{grmVariableValue,jdbcType=VARCHAR}, #{grmVariableOrder,jdbcType=INTEGER}, 
      #{createUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{deleteFlag,jdbcType=BIT}, #{organizationId,jdbcType=INTEGER}, 
      #{osh,jdbcType=DECIMAL}, #{osl,jdbcType=DECIMAL}, #{ish,jdbcType=DECIMAL}, #{isl,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kuyun.eam.dao.model.EamSensor">
    insert into eam_sensor
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sensorId != null">
        sensor_id,
      </if>
      <if test="equipmentId != null">
        equipment_id,
      </if>
      <if test="equipmentModelPropertyId != null">
        equipment_model_property_id,
      </if>
      <if test="salveId != null">
        salve_id,
      </if>
      <if test="functionCode != null">
        function_code,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="dataFormat != null">
        data_format,
      </if>
      <if test="bitOrder != null">
        bit_order,
      </if>
      <if test="period != null">
        period,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="writeNumber != null">
        write_number,
      </if>
      <if test="grmAction != null">
        grm_action,
      </if>
      <if test="grmVariable != null">
        grm_variable,
      </if>
      <if test="grmVariableValue != null">
        grm_variable_value,
      </if>
      <if test="grmVariableOrder != null">
        grm_variable_order,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
      <if test="organizationId != null">
        organization_id,
      </if>
      <if test="osh != null">
        osh,
      </if>
      <if test="osl != null">
        osl,
      </if>
      <if test="ish != null">
        ish,
      </if>
      <if test="isl != null">
        isl,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sensorId != null">
        #{sensorId,jdbcType=INTEGER},
      </if>
      <if test="equipmentId != null">
        #{equipmentId,jdbcType=VARCHAR},
      </if>
      <if test="equipmentModelPropertyId != null">
        #{equipmentModelPropertyId,jdbcType=INTEGER},
      </if>
      <if test="salveId != null">
        #{salveId,jdbcType=INTEGER},
      </if>
      <if test="functionCode != null">
        #{functionCode,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=INTEGER},
      </if>
      <if test="dataFormat != null">
        #{dataFormat,jdbcType=VARCHAR},
      </if>
      <if test="bitOrder != null">
        #{bitOrder,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        #{period,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="writeNumber != null">
        #{writeNumber,jdbcType=INTEGER},
      </if>
      <if test="grmAction != null">
        #{grmAction,jdbcType=VARCHAR},
      </if>
      <if test="grmVariable != null">
        #{grmVariable,jdbcType=VARCHAR},
      </if>
      <if test="grmVariableValue != null">
        #{grmVariableValue,jdbcType=VARCHAR},
      </if>
      <if test="grmVariableOrder != null">
        #{grmVariableOrder,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=BIT},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="osh != null">
        #{osh,jdbcType=DECIMAL},
      </if>
      <if test="osl != null">
        #{osl,jdbcType=DECIMAL},
      </if>
      <if test="ish != null">
        #{ish,jdbcType=DECIMAL},
      </if>
      <if test="isl != null">
        #{isl,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kuyun.eam.dao.model.EamSensorExample" resultType="java.lang.Long">
    select count(*) from eam_sensor
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update eam_sensor
    <set>
      <if test="record.sensorId != null">
        sensor_id = #{record.sensorId,jdbcType=INTEGER},
      </if>
      <if test="record.equipmentId != null">
        equipment_id = #{record.equipmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.equipmentModelPropertyId != null">
        equipment_model_property_id = #{record.equipmentModelPropertyId,jdbcType=INTEGER},
      </if>
      <if test="record.salveId != null">
        salve_id = #{record.salveId,jdbcType=INTEGER},
      </if>
      <if test="record.functionCode != null">
        function_code = #{record.functionCode,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=INTEGER},
      </if>
      <if test="record.dataFormat != null">
        data_format = #{record.dataFormat,jdbcType=VARCHAR},
      </if>
      <if test="record.bitOrder != null">
        bit_order = #{record.bitOrder,jdbcType=VARCHAR},
      </if>
      <if test="record.period != null">
        period = #{record.period,jdbcType=INTEGER},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.writeNumber != null">
        write_number = #{record.writeNumber,jdbcType=INTEGER},
      </if>
      <if test="record.grmAction != null">
        grm_action = #{record.grmAction,jdbcType=VARCHAR},
      </if>
      <if test="record.grmVariable != null">
        grm_variable = #{record.grmVariable,jdbcType=VARCHAR},
      </if>
      <if test="record.grmVariableValue != null">
        grm_variable_value = #{record.grmVariableValue,jdbcType=VARCHAR},
      </if>
      <if test="record.grmVariableOrder != null">
        grm_variable_order = #{record.grmVariableOrder,jdbcType=INTEGER},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteFlag != null">
        delete_flag = #{record.deleteFlag,jdbcType=BIT},
      </if>
      <if test="record.organizationId != null">
        organization_id = #{record.organizationId,jdbcType=INTEGER},
      </if>
      <if test="record.osh != null">
        osh = #{record.osh,jdbcType=DECIMAL},
      </if>
      <if test="record.osl != null">
        osl = #{record.osl,jdbcType=DECIMAL},
      </if>
      <if test="record.ish != null">
        ish = #{record.ish,jdbcType=DECIMAL},
      </if>
      <if test="record.isl != null">
        isl = #{record.isl,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update eam_sensor
    set sensor_id = #{record.sensorId,jdbcType=INTEGER},
      equipment_id = #{record.equipmentId,jdbcType=VARCHAR},
      equipment_model_property_id = #{record.equipmentModelPropertyId,jdbcType=INTEGER},
      salve_id = #{record.salveId,jdbcType=INTEGER},
      function_code = #{record.functionCode,jdbcType=INTEGER},
      address = #{record.address,jdbcType=INTEGER},
      data_format = #{record.dataFormat,jdbcType=VARCHAR},
      bit_order = #{record.bitOrder,jdbcType=VARCHAR},
      period = #{record.period,jdbcType=INTEGER},
      quantity = #{record.quantity,jdbcType=INTEGER},
      write_number = #{record.writeNumber,jdbcType=INTEGER},
      grm_action = #{record.grmAction,jdbcType=VARCHAR},
      grm_variable = #{record.grmVariable,jdbcType=VARCHAR},
      grm_variable_value = #{record.grmVariableValue,jdbcType=VARCHAR},
      grm_variable_order = #{record.grmVariableOrder,jdbcType=INTEGER},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      delete_flag = #{record.deleteFlag,jdbcType=BIT},
      organization_id = #{record.organizationId,jdbcType=INTEGER},
      osh = #{record.osh,jdbcType=DECIMAL},
      osl = #{record.osl,jdbcType=DECIMAL},
      ish = #{record.ish,jdbcType=DECIMAL},
      isl = #{record.isl,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kuyun.eam.dao.model.EamSensor">
    update eam_sensor
    <set>
      <if test="equipmentId != null">
        equipment_id = #{equipmentId,jdbcType=VARCHAR},
      </if>
      <if test="equipmentModelPropertyId != null">
        equipment_model_property_id = #{equipmentModelPropertyId,jdbcType=INTEGER},
      </if>
      <if test="salveId != null">
        salve_id = #{salveId,jdbcType=INTEGER},
      </if>
      <if test="functionCode != null">
        function_code = #{functionCode,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=INTEGER},
      </if>
      <if test="dataFormat != null">
        data_format = #{dataFormat,jdbcType=VARCHAR},
      </if>
      <if test="bitOrder != null">
        bit_order = #{bitOrder,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        period = #{period,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="writeNumber != null">
        write_number = #{writeNumber,jdbcType=INTEGER},
      </if>
      <if test="grmAction != null">
        grm_action = #{grmAction,jdbcType=VARCHAR},
      </if>
      <if test="grmVariable != null">
        grm_variable = #{grmVariable,jdbcType=VARCHAR},
      </if>
      <if test="grmVariableValue != null">
        grm_variable_value = #{grmVariableValue,jdbcType=VARCHAR},
      </if>
      <if test="grmVariableOrder != null">
        grm_variable_order = #{grmVariableOrder,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=BIT},
      </if>
      <if test="organizationId != null">
        organization_id = #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="osh != null">
        osh = #{osh,jdbcType=DECIMAL},
      </if>
      <if test="osl != null">
        osl = #{osl,jdbcType=DECIMAL},
      </if>
      <if test="ish != null">
        ish = #{ish,jdbcType=DECIMAL},
      </if>
      <if test="isl != null">
        isl = #{isl,jdbcType=DECIMAL},
      </if>
    </set>
    where sensor_id = #{sensorId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kuyun.eam.dao.model.EamSensor">
    update eam_sensor
    set equipment_id = #{equipmentId,jdbcType=VARCHAR},
      equipment_model_property_id = #{equipmentModelPropertyId,jdbcType=INTEGER},
      salve_id = #{salveId,jdbcType=INTEGER},
      function_code = #{functionCode,jdbcType=INTEGER},
      address = #{address,jdbcType=INTEGER},
      data_format = #{dataFormat,jdbcType=VARCHAR},
      bit_order = #{bitOrder,jdbcType=VARCHAR},
      period = #{period,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      write_number = #{writeNumber,jdbcType=INTEGER},
      grm_action = #{grmAction,jdbcType=VARCHAR},
      grm_variable = #{grmVariable,jdbcType=VARCHAR},
      grm_variable_value = #{grmVariableValue,jdbcType=VARCHAR},
      grm_variable_order = #{grmVariableOrder,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_flag = #{deleteFlag,jdbcType=BIT},
      organization_id = #{organizationId,jdbcType=INTEGER},
      osh = #{osh,jdbcType=DECIMAL},
      osl = #{osl,jdbcType=DECIMAL},
      ish = #{ish,jdbcType=DECIMAL},
      isl = #{isl,jdbcType=DECIMAL}
    where sensor_id = #{sensorId,jdbcType=INTEGER}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>