<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kuyun.eam.rpc.mapper.EamApiMapper">

	<resultMap id="EamMaintenanceVOResultMap" type="com.kuyun.eam.vo.EamMaintenanceVO" extends="com.kuyun.eam.dao.mapper.EamMaintenanceMapper.BaseResultMap">
		<result column="equipment_name" jdbcType="VARCHAR" property="equipmentName" />
		<result column="equipment_number" jdbcType="VARCHAR" property="equipmentNumber" />
		<result column="part_name" jdbcType="VARCHAR" property="partName" />
		<result column="maintain_user_name" jdbcType="VARCHAR" property="maintainUserName" />
	</resultMap>


	<!-- 维保字段 -->
	<sql id="Maintenance_Column_List">
		t.maintenance_id, t.equipment_id, t.part_id, t.part_quantity, t.reason, t.content, t.maintain_user_id, t.maintain_time,
		t.create_user_id, t.create_time, t.update_user_id, t.update_time, t.delete_flag,
	</sql>



	<select id="selectMaintenance" parameterType="com.kuyun.eam.vo.EamMaintenanceVO" resultMap="EamMaintenanceVOResultMap">
		select
		<include refid="Maintenance_Column_List" />
		e.name as equipment_name,
		e.number as equipment_number,
		p.name as part_name,
		u.realname as maintain_user_name
		from eam_maintenance t
		LEFT JOIN eam_equipment e ON t.equipment_id = e.equipment_id
		LEFT JOIN eam_parts p on  t.part_id = p.part_id
		LEFT JOIN upms_user u on t.maintain_user_id = u.user_id
		WHERE t.delete_flag = 0
		<if test="organizationId != null and organizationId != ''">
			AND t.organization_id = #{organizationId}
		</if>

		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="limit != null">
			<if test="offset != null">
				limit ${offset}, ${limit}
			</if>
			<if test="offset == null">
				limit ${limit}
			</if>
		</if>
	</select>

	<resultMap id="EamLocationVOResultMap" type="com.kuyun.eam.vo.EamLocationVO" extends="com.kuyun.eam.dao.mapper.EamLocationMapper.BaseResultMap">
		<result column="warehouse_name" jdbcType="VARCHAR" property="warehouseName" />
	</resultMap>


	<!-- 仓位字段 -->
	<sql id="Location_Column_List">
		t.location_id, t.warehouse_id, t.number, t.comments,
		t.create_user_id, t.create_time, t.update_user_id, t.update_time, t.delete_flag,
		t.organization_id,
	</sql>



	<select id="selectLocation" parameterType="com.kuyun.eam.vo.EamLocationVO" resultMap="EamLocationVOResultMap">
		select

		<include refid="Location_Column_List" />
		e.name as warehouse_name
		from eam_Location t
		LEFT JOIN eam_warehouse e ON t.warehouse_id = e.warehouse_id
		WHERE t.delete_flag = 0
		<if test="organizationId != null and organizationId != ''">
			AND t.organization_id = #{organizationId}
		</if>
		<if test="warehouseId != null">
			AND t.warehouse_id = #{warehouseId}
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="limit != null">
			<if test="offset != null">
				limit ${offset}, ${limit}
			</if>
			<if test="offset == null">
				limit ${limit}
			</if>
		</if>
	</select>


	<resultMap id="EamPartVOResultMap" type="com.kuyun.eam.vo.EamPartVO" extends="com.kuyun.eam.dao.mapper.EamPartsMapper.BaseResultMap">
		<result column="category_name" jdbcType="VARCHAR" property="categoryName" />
	</resultMap>


	<!-- 配件字段 -->
	<sql id="Part_Column_List">
		t.part_id, t.category_id, t.name, t.spec, t.model, t.unit, t.brand,
		t.create_user_id, t.create_time, t.update_user_id, t.update_time, t.delete_flag,
		t.organization_id,
	</sql>



	<select id="selectPart" parameterType="com.kuyun.eam.vo.EamPartVO" resultMap="EamPartVOResultMap">
		select

		<include refid="Part_Column_List" />
		e.name as category_name
		from eam_parts t
		LEFT JOIN eam_parts_category e ON t.category_id = e.category_id
		WHERE t.delete_flag = 0
		<if test="organizationId != null and organizationId != ''">
			AND t.organization_id = #{organizationId}
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="limit != null">
			<if test="offset != null">
				limit ${offset}, ${limit}
			</if>
			<if test="offset == null">
				limit ${limit}
			</if>
		</if>
	</select>


	<resultMap id="EamInventoryVOResultMap" type="com.kuyun.eam.vo.EamInventoryVO" extends="com.kuyun.eam.dao.mapper.EamInventoryMapper.BaseResultMap">
		<result column="warehouse_name" jdbcType="VARCHAR" property="warehouseName" />
		<result column="location_number" jdbcType="VARCHAR" property="locationNumber" />
		<result column="part_name" jdbcType="VARCHAR" property="partName" />
	</resultMap>


	<!-- 库存字段 -->
	<sql id="Inventory_Column_List">
		t.inventory_id, t.warehouse_id, t.location_id, t.part_id, t.quantity, t.in_task_date,
		t.create_user_id, t.create_time, t.update_user_id, t.update_time, t.delete_flag,
		t.organization_id,
	</sql>



	<select id="selectInventory" parameterType="com.kuyun.eam.vo.EamInventoryVO" resultMap="EamInventoryVOResultMap">
		select

		<include refid="Inventory_Column_List" />
		w.name as warehouse_name,
		l.number as location_number,
		p.name as part_name
		from eam_inventory t
		LEFT JOIN eam_warehouse w ON t.warehouse_id = w.warehouse_id
		LEFT JOIN eam_location l ON t.location_id = l.location_id
		LEFT JOIN eam_parts p ON t.part_id = p.part_id
		WHERE t.delete_flag = 0
		<if test="organizationId != null and organizationId != ''">
			AND t.organization_id = #{organizationId}
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="limit != null">
			<if test="offset != null">
				limit ${offset}, ${limit}
			</if>
			<if test="offset == null">
				limit ${limit}
			</if>
		</if>
	</select>


	<resultMap id="EamSensorDataVOResultMap" type="com.kuyun.eam.vo.EamSensorDataVO" extends="com.kuyun.eam.dao.mapper.EamSensorDataMapper.BaseResultMap">
		<result column="equipment_name" jdbcType="VARCHAR" property="equipmentName" />
		<result column="equipment_model_property_id" jdbcType="VARCHAR" property="equipmentModelPropertyId" />
		<result column="equipment_model_property_name" jdbcType="VARCHAR" property="equipmentModelPropertyName" />
	</resultMap>

	<sql id="Sensor_Data_Column_List">
		t.sensor_data_id, t.equipment_id, t.sensor_id, t.string_value, t.number_value, t.boolean_value, t.longitude_value,
		t.latitude_value, t.create_user_id, t.create_time, t.update_user_id, t.update_time, t.delete_flag,
		t.organization_id,
	</sql>

	<select id="selectEamSensorData" parameterType="com.kuyun.eam.vo.EamSensorVO" resultMap="EamSensorDataVOResultMap">
		select
		<include refid="Sensor_Data_Column_List" />
		e.name as equipment_name,
		p.equipment_model_property_id,
		p.name as equipment_model_property_name
		from eam_sensor_data t
		LEFT JOIN eam_sensor s ON t.sensor_id = s.sensor_id
		LEFT JOIN eam_equipment_model_properties p ON p.equipment_model_property_id = s.equipment_model_property_id
		LEFT JOIN eam_equipment e ON e.equipment_id = t.equipment_id
		WHERE t.delete_flag = 0
		<if test="sensorId != null and sensorId != ''">
			AND s.sensor_id = #{sensorId}
		</if>
		<if test="equipmentModelPropertyId != null and equipmentModelPropertyId != ''">
			AND s.equipment_model_property_id = #{equipmentModelPropertyId}
		</if>
		<if test="startDate != null">
			AND t.create_time <![CDATA[>=]]> #{startDate}
		</if>
		<if test="endDate != null">
			AND t.create_time <![CDATA[<=]]>#{endDate}
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="limit != null">
			<if test="offset != null">
				limit ${offset}, ${limit}
			</if>
			<if test="offset == null">
				limit ${limit}
			</if>
		</if>
	</select>

	<sql id="Sensor_Column_List">
		s.sensor_id, s.equipment_model_property_id, s.salve_id, s.function_code, s.address, s.data_format,
		s.bit_order, s.period, s.quantity, s.write_number, s.grm_action, s.grm_variable, s.grm_variable_value,
		s.grm_variable_order, s.osh, s.osl, s.ish, s.isl, s.create_user_id, s.create_time, s.update_user_id,
		s.update_time, s.delete_flag, s.organization_id,
	</sql>

	<resultMap id="EamSensorVOResultMap" type="com.kuyun.eam.vo.EamSensorVO" extends="com.kuyun.eam.dao.mapper.EamSensorMapper.BaseResultMap">
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="unit" jdbcType="VARCHAR" property="unit" />
		<result column="data_type" jdbcType="VARCHAR" property="dataType" />
		<result column="string_value" jdbcType="VARCHAR" property="stringValue" />
		<result column="display_type" jdbcType="VARCHAR" property="displayType" />
	</resultMap>

	<select id="selectSensorData" parameterType="String" resultMap="EamSensorVOResultMap">
		SELECT
		<include refid="Sensor_Column_List" />
		p.name,
		p.unit,
		p.data_type,
		p.display_type,
		d.string_value
		FROM eam_sensor s
		LEFT JOIN eam_equipment_model_properties p ON s.equipment_model_property_id = p.equipment_model_property_id
		LEFT JOIN eam_sensor_data d On s.sensor_id = d.sensor_id
		AND d.sensor_data_id = (select sensor_data_id from eam_sensor_data t where t.sensor_id = s.sensor_id order by t.create_time desc limit 1)

		WHERE s.delete_flag = 0 AND d.string_value is not null AND d.equipment_id = #{equipmentId}

	</select>


	<resultMap id="EamTicketVOResultMap" type="com.kuyun.eam.vo.EamTicketVO" extends="com.kuyun.eam.dao.mapper.EamTicketMapper.BaseResultMap">
	    <result column="realname" jdbcType="VARCHAR" property="realname" />
		<association property="ticketType" resultMap="com.kuyun.eam.dao.mapper.EamTicketTypeMapper.BaseResultMap"></association>
	</resultMap>

	<select id="selectTicket" parameterType="com.kuyun.eam.dao.model.EamTicketExample" resultMap="EamTicketVOResultMap">
		select
		<include refid="com.kuyun.eam.dao.mapper.EamTicketMapper.Base_Column_List" /> ,
		uu.realname as realname,
		<include refid="com.kuyun.eam.dao.mapper.EamTicketTypeMapper.Base_Column_List"/>
		from eam_ticket
		LEFT OUTER JOIN eam_ticket_type  ON eam_ticket.ticket_type_id = eam_ticket_type.id
		LEFT OUTER JOIN upms_user uu ON eam_ticket.executor_id = uu.user_id
		<if test="_parameter != null">
      		<include refid="com.kuyun.eam.dao.mapper.EamTicketMapper.Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="limit != null">
			<if test="offset != null">
				limit ${offset}, ${limit}
			</if>
			<if test="offset == null">
				limit ${limit}
			</if>
		</if>
	</select>

	<select id="selectAlarm" parameterType="com.kuyun.eam.dao.model.EamSensorData" resultMap="com.kuyun.eam.dao.mapper.EamAlarmMapper.BaseResultMap">
		select
		a.alarm_id, a.alarm_type, a.upper_Bound, a.lower_Bound, a.duration, a.alarm_target, a.equipment_model_property_id,
		a.create_user_id, a.create_time, a.update_user_id, a.update_time, a.delete_flag, a.organization_id
		from eam_alarm a
		left join eam_equipment_model_properties p on a.equipment_model_property_id = p.equipment_model_property_id
		left join eam_sensor s on s.equipment_model_property_id = p.equipment_model_property_id
		left join eam_sensor_data d on d.sensor_id = s.sensor_id
		WHERE a.delete_flag = 0
		<if test="sensorId != null and sensorId != ''">
			AND d.sensor_id = #{sensorId}
		</if>
	</select>

	<select id="selectAlarms" parameterType="String" resultMap="com.kuyun.eam.dao.mapper.EamAlarmMapper.BaseResultMap">
		select
		a.alarm_id, a.alarm_type, a.upper_Bound, a.lower_Bound, a.duration, a.alarm_target, a.equipment_model_property_id,
		a.create_user_id, a.create_time, a.update_user_id, a.update_time, a.delete_flag, a.organization_id
		from eam_alarm a
		left join eam_equipment_model_properties p on a.equipment_model_property_id = p.equipment_model_property_id
		left join eam_equipment_model m on m.equipment_model_id = p.equipment_model_id
		left join eam_equipment e on e.equipment_model_id = m.equipment_model_id
		WHERE a.delete_flag = 0 and d.equipment_id = #{deviceId}
	</select>

	<resultMap id="EamAlarmRecordVOResultMap" type="com.kuyun.eam.vo.EamAlarmRecordVO" extends="com.kuyun.eam.dao.mapper.EamAlarmRecordMapper.BaseResultMap">
		<result column="alarm_value" jdbcType="VARCHAR" property="alarmValue" />
		<result column="alarm_type" jdbcType="VARCHAR" property="alarmType" />
		<result column="upper_Bound" jdbcType="DECIMAL" property="upperBound" />
		<result column="lower_Bound" jdbcType="DECIMAL" property="lowerBound" />
		<result column="duration" jdbcType="DECIMAL" property="duration" />
		<result column="alarm_target" jdbcType="VARCHAR" property="alarmTarget" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="user_name" jdbcType="VARCHAR" property="userName" />
		<result column="equipment_name" jdbcType="VARCHAR" property="equipmentName" />
		<result column="equipment_number" jdbcType="VARCHAR" property="equipmentNumber" />
		<result column="equipment_model_property_name" jdbcType="VARCHAR" property="equipmentModelPropertyName" />
	</resultMap>

	<sql id="Alarm_Record_Column_List">
		t.id, t.alarm_id, t.equipment_id, t.equipment_model_property_id, t.sensor_data_id, t.create_user_id,
        t.create_time, t.update_user_id, t.update_time, t.delete_flag, t.organization_id,
	</sql>

	<select id="selectAlarmRecords" parameterType="com.kuyun.eam.vo.EamAlarmRecordVO" resultMap="EamAlarmRecordVOResultMap">
		select DISTINCT
		<include refid="Alarm_Record_Column_List" />
		s.string_value as alarm_value,
		a.alarm_type,
		a.upper_Bound,
		a.lower_Bound,
		a.duration,
		a.alarm_target,
		uu.phone,
		uu.email,
		uu.realname as user_name,
		e.name as equipment_name,
		e.number as equipment_number,
		p.name as equipment_model_property_name
		from eam_alarm_record t
		LEFT JOIN eam_alarm a ON t.alarm_id = a.alarm_id
		LEFT JOIN eam_alarm_target_user u ON t.alarm_id = u.alarm_id
		LEFT JOIN upms_user uu ON uu.user_id = u.user_id
		LEFT JOIN eam_sensor_data s ON t.sensor_data_id = s.sensor_data_id
		LEFT JOIN eam_equipment_model_properties p ON p.equipment_model_property_id = t.equipment_model_property_id
		LEFT JOIN eam_equipment e ON e.equipment_id = t.equipment_id
		WHERE t.delete_flag = 0 AND s.delete_flag = 0
		<if test="equipmentId != null and equipmentId != ''">
			AND t.equipment_id = #{equipmentId}
		</if>
		<if test="equipmentModelPropertyId != null and equipmentModelPropertyId != ''">
			AND t.equipment_model_property_id = #{equipmentModelPropertyId}
		</if>
		<if test="startDate != null">
			AND t.create_time <![CDATA[>=]]> #{startDate}
		</if>
		<if test="endDate != null">
			AND t.create_time <![CDATA[<=]]>#{endDate}
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="limit != null">
			<if test="offset != null">
				limit ${offset}, ${limit}
			</if>
			<if test="offset == null">
				limit ${limit}
			</if>
		</if>
	</select>

	<!-- 缓存 -->
	<cache type="org.mybatis.caches.ehcache.LoggingEhcache" />

</mapper>
